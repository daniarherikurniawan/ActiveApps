/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package activeapps;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.Timer;

/**
 *
 * @author daniar heri
 */
public class DebatePanel extends ImagePanelBackGround {

    /**
     * Creates new form DebatePanel
     */
    private int DefaultTime = 5*60 ; // detik
    private int DefaultPOI = 15;    
    private int DefaultReply = 3*60;
    private int JumlahTolak = 0;
    Timer countdownTimer , countdownTimerPOI, countdownTimerReply;
    public DebatePanel(String Path) {
        super(Path);
        initComponents();
        countdownTimer = new Timer(1000, new DebatePanel.CountdownTimerListener(DefaultTime));
        countdownTimerPOI = new Timer(1000, new DebatePanel.CountdownTimerListenerPOI(DefaultPOI));
        countdownTimerReply = new Timer(1000, new DebatePanel.CountdownTimerListener(DefaultReply));
        repaintLabel(DefaultTime);
        StopTimer.setEnabled(false);
        af2.setEnabled(false);
        af3.setEnabled(false);
        afReply.setEnabled(false);
        ne1.setEnabled(false);
        ne2.setEnabled(false);
        ne3.setEnabled(false);
        neReply.setEnabled(false);
        TolakPOI.setEnabled(false);
        TerimaPOI.setEnabled(false);
        setSize(MainFrame.FRAME_WIDTH, MainFrame.FRAME_HEIGHT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Kembali = new javax.swing.JButton();
        LabelTimer = new javax.swing.JLabel();
        TerimaPOI = new javax.swing.JButton();
        af1 = new javax.swing.JButton();
        af2 = new javax.swing.JButton();
        afReply = new javax.swing.JButton();
        af3 = new javax.swing.JButton();
        neReply = new javax.swing.JButton();
        ne3 = new javax.swing.JButton();
        ne2 = new javax.swing.JButton();
        ne1 = new javax.swing.JButton();
        LabelTimerPOI = new javax.swing.JLabel();
        Lampu1 = new javax.swing.JPanel();
        Label1 = new javax.swing.JLabel();
        Lampu2 = new javax.swing.JPanel();
        Label2 = new javax.swing.JLabel();
        Lampu3 = new javax.swing.JPanel();
        Label3 = new javax.swing.JLabel();
        TolakPOI = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        LBM2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        LBM1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        LBM3 = new javax.swing.JLabel();
        StopTimer = new javax.swing.JButton();

        Kembali.setBackground(new java.awt.Color(0, 0, 0));
        Kembali.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Kembali.setForeground(new java.awt.Color(255, 255, 255));
        Kembali.setText("Kembali");
        Kembali.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KembaliMouseClicked(evt);
            }
        });

        LabelTimer.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        LabelTimer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        TerimaPOI.setBackground(new java.awt.Color(0, 0, 0));
        TerimaPOI.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TerimaPOI.setForeground(new java.awt.Color(255, 255, 255));
        TerimaPOI.setText("Accept POI");
        TerimaPOI.setMargin(new java.awt.Insets(2, 4, 2, 4));
        TerimaPOI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TerimaPOIMouseClicked(evt);
            }
        });

        af1.setBackground(new java.awt.Color(0, 0, 0));
        af1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        af1.setForeground(new java.awt.Color(255, 255, 255));
        af1.setText("Affirmative 1");
        af1.setMargin(new java.awt.Insets(2, 4, 2, 4));
        af1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                af1MouseClicked(evt);
            }
        });

        af2.setBackground(new java.awt.Color(0, 0, 0));
        af2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        af2.setForeground(new java.awt.Color(255, 255, 255));
        af2.setText("Affirmative 2");
        af2.setMargin(new java.awt.Insets(2, 4, 2, 4));
        af2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                af2MouseClicked(evt);
            }
        });

        afReply.setBackground(new java.awt.Color(0, 0, 0));
        afReply.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        afReply.setForeground(new java.awt.Color(255, 255, 255));
        afReply.setText("Affirmative Reply");
        afReply.setMargin(new java.awt.Insets(2, 4, 2, 4));
        afReply.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                afReplyMouseClicked(evt);
            }
        });

        af3.setBackground(new java.awt.Color(0, 0, 0));
        af3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        af3.setForeground(new java.awt.Color(255, 255, 255));
        af3.setText("Affirmative 3");
        af3.setMargin(new java.awt.Insets(2, 4, 2, 4));
        af3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                af3MouseClicked(evt);
            }
        });

        neReply.setBackground(new java.awt.Color(0, 0, 0));
        neReply.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        neReply.setForeground(new java.awt.Color(255, 255, 255));
        neReply.setText("Negative Reply");
        neReply.setMargin(new java.awt.Insets(2, 4, 2, 4));
        neReply.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                neReplyMouseClicked(evt);
            }
        });

        ne3.setBackground(new java.awt.Color(0, 0, 0));
        ne3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ne3.setForeground(new java.awt.Color(255, 255, 255));
        ne3.setText("Negative 3");
        ne3.setMargin(new java.awt.Insets(2, 4, 2, 4));
        ne3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ne3MouseClicked(evt);
            }
        });

        ne2.setBackground(new java.awt.Color(0, 0, 0));
        ne2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ne2.setForeground(new java.awt.Color(255, 255, 255));
        ne2.setText("Negative 2");
        ne2.setMargin(new java.awt.Insets(2, 4, 2, 4));
        ne2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ne2MouseClicked(evt);
            }
        });

        ne1.setBackground(new java.awt.Color(0, 0, 0));
        ne1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ne1.setForeground(new java.awt.Color(255, 255, 255));
        ne1.setText("Negative 1");
        ne1.setMargin(new java.awt.Insets(2, 4, 2, 4));
        ne1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ne1MouseClicked(evt);
            }
        });
        ne1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ne1ActionPerformed(evt);
            }
        });

        LabelTimerPOI.setBackground(new java.awt.Color(255, 255, 255));
        LabelTimerPOI.setFont(new java.awt.Font("Tahoma", 0, 105)); // NOI18N
        LabelTimerPOI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Lampu1.setBackground(new java.awt.Color(255, 255, 255));
        Lampu1.setOpaque(false);

        javax.swing.GroupLayout Lampu1Layout = new javax.swing.GroupLayout(Lampu1);
        Lampu1.setLayout(Lampu1Layout);
        Lampu1Layout.setHorizontalGroup(
            Lampu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Label1, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
        );
        Lampu1Layout.setVerticalGroup(
            Lampu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
        );

        Lampu2.setBackground(new java.awt.Color(255, 255, 255));
        Lampu2.setOpaque(false);

        javax.swing.GroupLayout Lampu2Layout = new javax.swing.GroupLayout(Lampu2);
        Lampu2.setLayout(Lampu2Layout);
        Lampu2Layout.setHorizontalGroup(
            Lampu2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Label2, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
        );
        Lampu2Layout.setVerticalGroup(
            Lampu2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Label2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        Lampu3.setBackground(new java.awt.Color(255, 255, 255));
        Lampu3.setOpaque(false);

        javax.swing.GroupLayout Lampu3Layout = new javax.swing.GroupLayout(Lampu3);
        Lampu3.setLayout(Lampu3Layout);
        Lampu3Layout.setHorizontalGroup(
            Lampu3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Label3, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
        );
        Lampu3Layout.setVerticalGroup(
            Lampu3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Label3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        TolakPOI.setBackground(new java.awt.Color(0, 0, 0));
        TolakPOI.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TolakPOI.setForeground(new java.awt.Color(255, 255, 255));
        TolakPOI.setText("Reject POI");
        TolakPOI.setMargin(new java.awt.Insets(2, 4, 2, 4));
        TolakPOI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TolakPOIMouseClicked(evt);
            }
        });
        TolakPOI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TolakPOIActionPerformed(evt);
            }
        });

        jPanel5.setOpaque(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LBM2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LBM2, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        jPanel6.setOpaque(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LBM1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LBM1, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        jPanel7.setOpaque(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LBM3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LBM3, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        StopTimer.setBackground(new java.awt.Color(0, 0, 0));
        StopTimer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        StopTimer.setForeground(new java.awt.Color(255, 255, 255));
        StopTimer.setText("STOP TIMER");
        StopTimer.setMargin(new java.awt.Insets(2, 4, 2, 4));
        StopTimer.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                StopTimerMouseDragged(evt);
            }
        });
        StopTimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StopTimerMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(af1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(af2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(afReply, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(af3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LabelTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ne1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ne2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(neReply, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ne3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(LabelTimerPOI, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TerimaPOI, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TolakPOI, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(638, 638, 638)
                        .addComponent(StopTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(496, 496, 496)
                        .addComponent(Lampu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(Lampu2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(Lampu3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(455, 455, 455)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(394, 394, 394)
                .addComponent(Kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ne1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ne2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ne3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(neReply, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Lampu3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Lampu2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Lampu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addComponent(StopTimer)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(TerimaPOI, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TolakPOI, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(LabelTimerPOI, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(af1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(af2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(af3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(afReply, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void KembaliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KembaliMouseClicked
        if(countdownTimer.isRunning()){
            countdownTimer.stop();
            repaintLabel(DefaultTime);
        }
        MainFrame.SetNewPanel("PanitiaSession");
    }//GEN-LAST:event_KembaliMouseClicked

    private void TerimaPOIMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TerimaPOIMouseClicked
        if (TerimaPOI.isEnabled()){
            countdownTimerPOI = new Timer(1000, new CountdownTimerListenerPOI(DefaultPOI));
            countdownTimerPOI.start();
            TerimaPOI.setEnabled(false);
            TolakPOI.setEnabled(false);
            repaintLabelPOI(DefaultPOI);
        }
    }//GEN-LAST:event_TerimaPOIMouseClicked

    private void af1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_af1MouseClicked
        if (af1.isEnabled()){
            SetLBM();
            JumlahTolak = 0;
            TerimaPOI.setEnabled(true);
            TolakPOI.setEnabled(true);
            countdownTimer = new Timer(1000, new CountdownTimerListener(DefaultTime));
            countdownTimer.start();
            af1.setEnabled(false);
            ne1.setEnabled(true);
            StopTimer.setEnabled(true);
            SetLampuHKM();
        }
    }//GEN-LAST:event_af1MouseClicked

    private void af2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_af2MouseClicked
        if (af2.isEnabled()){
            SetLBM();
            if(countdownTimer.isRunning())
                countdownTimer.stop();
            JumlahTolak = 0;
            TolakPOI.setEnabled(true);
            countdownTimer = new Timer(1000, new CountdownTimerListener(DefaultTime));
            countdownTimer.start();
            ne2.setEnabled(true);
            af2.setEnabled(false);
            StopTimer.setEnabled(true);
            SetLampuHKM();
        }
    }//GEN-LAST:event_af2MouseClicked

    private void afReplyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_afReplyMouseClicked
        if (afReply.isEnabled()){
            SetLBM();
            if(countdownTimer.isRunning())
                countdownTimer.stop();
            if(countdownTimerReply.isRunning())
                countdownTimerReply.stop();
            JumlahTolak = 0;
            TolakPOI.setEnabled(true);
            countdownTimerReply = new Timer(1000, new CountdownTimerListenerReply(DefaultReply));
            countdownTimerReply.start();
            afReply.setEnabled(false);
            StopTimer.setEnabled(true);
            SetLampuHKM();
        }
    }//GEN-LAST:event_afReplyMouseClicked

    private void af3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_af3MouseClicked
        if (af3.isEnabled()){
            SetLBM();
            if(countdownTimer.isRunning())
                countdownTimer.stop();
            JumlahTolak = 0;
            TolakPOI.setEnabled(true);
            countdownTimer = new Timer(1000, new CountdownTimerListener(DefaultTime));
            countdownTimer.start();
            af3.setEnabled(false);
            ne3.setEnabled(true);
            StopTimer.setEnabled(true);
            SetLampuHKM();
        }
    }//GEN-LAST:event_af3MouseClicked

    private void neReplyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_neReplyMouseClicked
        if (neReply.isEnabled()){
            SetLBM();
            if(countdownTimer.isRunning())
                countdownTimer.stop();
            JumlahTolak = 0;
            TolakPOI.setEnabled(true);
            countdownTimerReply = new Timer(1000, new CountdownTimerListenerReply(DefaultReply));
            countdownTimerReply.start();
            neReply.setEnabled(false);
            afReply.setEnabled(true);
            StopTimer.setEnabled(true);
            SetLampuHKM();
        }
    }//GEN-LAST:event_neReplyMouseClicked

    private void ne3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ne3MouseClicked
        if (ne3.isEnabled()){
            SetLBM();
            if(countdownTimer.isRunning())
                countdownTimer.stop();
            JumlahTolak = 0;
            TolakPOI.setEnabled(true);
            countdownTimer = new Timer(1000, new CountdownTimerListener(DefaultTime));
            countdownTimer.start();
            neReply.setEnabled(true);
            ne3.setEnabled(false);
            StopTimer.setEnabled(true);
            SetLampuHKM();
        }
    }//GEN-LAST:event_ne3MouseClicked

    private void ne2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ne2MouseClicked
        if (ne2.isEnabled()){
            SetLBM();
            if(countdownTimer.isRunning())
                countdownTimer.stop();
            JumlahTolak = 0;
            TolakPOI.setEnabled(true);
            countdownTimer = new Timer(1000, new CountdownTimerListener(DefaultTime));
            countdownTimer.start();
            af3.setEnabled(true);
            ne2.setEnabled(false);
            StopTimer.setEnabled(true);
            SetLampuHKM();
        }
    }//GEN-LAST:event_ne2MouseClicked

    private void ne1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ne1MouseClicked
        if (ne1.isEnabled()){
            SetLBM();
            if(countdownTimer.isRunning())
                countdownTimer.stop();
            JumlahTolak = 0;
            TolakPOI.setEnabled(true);
            countdownTimer = new Timer(1000, new CountdownTimerListener(DefaultTime));
            countdownTimer.start();
            af2.setEnabled(true);
            ne1.setEnabled(false);
            StopTimer.setEnabled(true);
            SetLampuHKM();
        }
    }//GEN-LAST:event_ne1MouseClicked

    private void TolakPOIMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TolakPOIMouseClicked
        JumlahTolak++;
        if(JumlahTolak==3)
            TolakPOI.setEnabled(false);
        MunculkanMerah(JumlahTolak);
    }//GEN-LAST:event_TolakPOIMouseClicked

    private void ne1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ne1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ne1ActionPerformed

    private void TolakPOIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TolakPOIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TolakPOIActionPerformed

    private void StopTimerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StopTimerMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_StopTimerMouseDragged

    private void StopTimerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StopTimerMouseClicked
        if (StopTimer.isEnabled()){
            StopTimer.setEnabled(false);
            if(countdownTimer.isRunning())
                countdownTimer.stop();
            if(countdownTimerReply.isRunning())
                countdownTimerReply.stop();
        }
    }//GEN-LAST:event_StopTimerMouseClicked
    
    public void MunculkanMerah(int Jum){
        ImageIcon icon = new ImageIcon("img/test/SmallRedFull.png");
        if (Jum >= 1){
            LBM1.removeAll();
            LBM1.setIcon(icon);
        }
        if (Jum >= 2){
            LBM2.removeAll();
            LBM2.setIcon(icon);
        }
        if (Jum >= 3){
            LBM3.removeAll();
            LBM3.setIcon(icon);
        }
    }
    
    public void SetLampuHKM(){
        ImageIcon icon = new ImageIcon("img/test/Green.png");
        Label1.removeAll();
        Label1.setIcon(icon);
        icon = new ImageIcon("img/test/Yellow.png");
        Label2.removeAll();
        Label2.setIcon(icon);
        icon = new ImageIcon("img/test/Redd.png");
        Label3.removeAll();
        Label3.setIcon(icon);
        
    }
    
    public void SetLBM(){
        ImageIcon icon = new ImageIcon("img/test/SmallRed.png");
        LBM1.removeAll();
        LBM1.setIcon(icon);
        icon = new ImageIcon("img/test/SmallRed.png");
        LBM2.removeAll();
        LBM2.setIcon(icon);
        icon = new ImageIcon("img/test/SmallRed.png");
        LBM3.removeAll();
        LBM3.setIcon(icon);
        
    }
    
    public void repaintLabel(int Second){
        
        int hh = Second/3600;
        int mm = (Second%3600)/60;
        int ss = (Second%3600)%60;
        String StrHH, StrMM, StrSS;
        if (hh < 10)
            StrHH = new String("0"+hh);
        else
            StrHH = new String(Integer.toString(hh));
        if (mm < 10)
            StrMM = new String("0"+mm);
        else
            StrMM = new String(Integer.toString(mm));
        if (ss < 10)
            StrSS = new String("0"+ss);
        else
            StrSS = new String(Integer.toString(ss));
        String Jam = new String(StrHH+":"+StrMM+":"+StrSS);
        
        LabelTimer.setText(Jam);
    }
    
    public void repaintLabelPOI(int Second){
        LabelTimerPOI.setText(String.valueOf(Second));
    }
    
    class CountdownTimerListener implements ActionListener{
        int timeRemaining ;
        
        public CountdownTimerListener(int Time){
            timeRemaining = Time;
        }
    
        @Override
        public void actionPerformed(ActionEvent e) {
            if (--timeRemaining > 0){
                repaintLabel(timeRemaining);
                if(timeRemaining==4*60){
                    ImageIcon icon = new ImageIcon("img/test/GreenFull.png");
                    Label1.removeAll();
                    Label1.setIcon(icon);
                }
                if(timeRemaining==60){
                    ImageIcon icon = new ImageIcon("img/test/YellowFull.png");
                    Label2.removeAll();
                    Label2.setIcon(icon);
                }
            }else{
                LabelTimer.setText("Time's up!");
                ImageIcon icon = new ImageIcon("img/test/RedFull.png");
                Label3.removeAll();
                Label3.setIcon(icon);
                StopTimer.setEnabled(false);
                countdownTimer.stop();
            }
        }
    }
    
    class CountdownTimerListenerReply implements ActionListener{
        int timeRemaining ;
        
        public CountdownTimerListenerReply(int Time){
            timeRemaining = Time;
        }
    
        @Override
        public void actionPerformed(ActionEvent e) {
            if (--timeRemaining > 0){
                repaintLabel(timeRemaining);
                if(timeRemaining==2*60){
                    ImageIcon icon = new ImageIcon("img/test/GreenFull.png");
                    Label1.removeAll();
                    Label1.setIcon(icon);
                }
                if(timeRemaining==30){
                    ImageIcon icon = new ImageIcon("img/test/YellowFull.png");
                    Label2.removeAll();
                    Label2.setIcon(icon);
                }
            }else{
                LabelTimer.setText("Time's up!");
                ImageIcon icon = new ImageIcon("img/test/RedFull.png");
                Label3.removeAll();
                Label3.setIcon(icon);
                StopTimer.setEnabled(false);
                countdownTimerReply.stop();
            }
        }
    }
    
    class CountdownTimerListenerPOI implements ActionListener{
        int timeRemaining ;
        
        public CountdownTimerListenerPOI(int Time){
            timeRemaining = Time;
        }
    
        @Override
        public void actionPerformed(ActionEvent e) {
            if (--timeRemaining > 0){
                repaintLabelPOI(timeRemaining);
            }else{
                LabelTimerPOI.setText("00");
                TerimaPOI.setEnabled(true);
                TolakPOI.setEnabled(true);
                countdownTimerPOI.stop();
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Kembali;
    private javax.swing.JLabel LBM1;
    private javax.swing.JLabel LBM2;
    private javax.swing.JLabel LBM3;
    private javax.swing.JLabel Label1;
    private javax.swing.JLabel Label2;
    private javax.swing.JLabel Label3;
    private javax.swing.JLabel LabelTimer;
    private javax.swing.JLabel LabelTimerPOI;
    private javax.swing.JPanel Lampu1;
    private javax.swing.JPanel Lampu2;
    private javax.swing.JPanel Lampu3;
    private javax.swing.JButton StopTimer;
    private javax.swing.JButton TerimaPOI;
    private javax.swing.JButton TolakPOI;
    private javax.swing.JButton af1;
    private javax.swing.JButton af2;
    private javax.swing.JButton af3;
    private javax.swing.JButton afReply;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JButton ne1;
    private javax.swing.JButton ne2;
    private javax.swing.JButton ne3;
    private javax.swing.JButton neReply;
    // End of variables declaration//GEN-END:variables
}
